{"version":3,"sources":["index.js"],"names":["HexbinPlot","axisX","axisY","data","setSelectedGames","axis","setSelectedColor","margin","width","height","xScale","d3","domain","item","range","nice","yScale","hexbin","d3hexbin","x","Math","max","y","radius","extent","bins","colorAccessor","total","forEach","value","length","colorScale","viewBox","id","clipPath","transform","map","bin","i","key","n","member","Team_H","Goal_H","Goal_A","Team_A","ReactTooltip","show","mouseUp","d","hexagon","fill","onClick","SearchGame","selectData","selectArray","teamArray","listTeam","team","paramsString","URL","getVUrl","URLSearchParams","getAll","makeUrl","className","size","Section","color","align","View","Goal","Shoot","Sprint","round","Mileage","src","frameborder","allow","allowfullscreen","ParallelCoordinates","variables","contentWidth","contentHeight","left","right","top","bottom","yScales","property","line","_","stroke","Color","label","y1","y2","ticks","filter","floor","j","x1","x2","fontSize","dominantBaseline","fontWeight","textAnchor","style","cursor","Team","RadarChart","keys","elements","console","log","r","scale","t0","PI","dt","path","points","moveTo","lineTo","closePath","toString","cos","sin","v","k","toFixed","TotalPage","useState","originalData","setGameData","data2","setTeamData","selectedGames","selectedTeam","setSelectedTeam","selectedAxis","selectedColor","teamOptions","unshift","colorOptions","value3","useEffect","fetch","then","response","json","game","response2","Total","onChange","event","target","render","document","querySelector"],"mappings":"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","file":"static/js/main.753dcbc3.chunk.js","sourcesContent":["import \"bulma/css/bulma.css\";\r\nimport \"./index.css\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport * as d3 from \"d3\";\r\nimport * as d3hexbin from \"d3-hexbin\";\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nconst HexbinPlot = ({ data, setSelectedGames, axis, setSelectedColor }) => {\r\n  let axisX;\r\n  let axisY;\r\n  if (axis === \"PCA\") {\r\n    axisX = \"PCA1\";\r\n    axisY = \"PCA2\";\r\n  } else {\r\n    axisX = \"tSNE_X\";\r\n    axisY = \"tSNE_Y\";\r\n  }\r\n  const contentWidth = 800;\r\n  const contentHeight = 500;\r\n  const xTop = 0;\r\n  const yTop = 0;\r\n  const margin = {\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n  };\r\n  const width = contentWidth + margin.left + margin.right;\r\n  const height = contentHeight + margin.top + margin.bottom;\r\n\r\n  const xScale = d3\r\n    .scaleLinear()\r\n    .domain(d3.extent(data, (item) => item[axisX]))\r\n    .range([0, contentWidth])\r\n    .nice();\r\n  const yScale = d3\r\n    .scaleLinear()\r\n    .domain(d3.extent(data, (item) => item[axisY]))\r\n    .range([contentHeight, 0])\r\n    .nice();\r\n  const hexbin = d3hexbin\r\n    .hexbin()\r\n    .x((item) => xScale(Math.max(item[axisX])))\r\n    .y((item) => yScale(Math.max(item[axisY])))\r\n    .radius(20)\r\n    .extent([\r\n      [0, 0],\r\n      [contentWidth, contentHeight],\r\n    ]);\r\n\r\n  const bins = hexbin(data);\r\n  const colorAccessor = (item) => {\r\n    let total = 0;\r\n    item.forEach((value) => {\r\n      total += value[setSelectedColor];\r\n    });\r\n    return total / item.length;\r\n  };\r\n  const colorScale = d3\r\n    .scaleSequential(d3.interpolateYlGn)\r\n    .domain(d3.extent(bins, colorAccessor)); \r\n\r\n  return (\r\n    <svg viewBox={`${xTop} ${yTop} ${width} ${height}`}>\r\n      <clipPath id=\"content-region\">\r\n        <rect x=\"0\" y={yTop} width={contentWidth} height={contentHeight} />\r\n      </clipPath>\r\n      <g>\r\n        <g\r\n          clipPath=\"url(#content-region)\"\r\n          transform={`translate(${margin.left},${margin.top})`}\r\n        >\r\n          {bins.map((bin, i) => {\r\n            function buttonClick() {\r\n              setSelectedGames(bin);\r\n              \r\n            }\r\n            //console.log(bin);\r\n\r\n            function mouseUp(){\r\n              let n = bin.length;\r\n              let member = [];\r\n\r\n              for(let i = 0; i < n; i++){\r\n                member[i] = bin[i].Team_H + ' ' + bin[i].Goal_H +' - ' + bin[i].Goal_A + ' ' + bin[i].Team_A + '\\n';\r\n              }\r\n              ReactTooltip.show(member);\r\n              return member;\r\n            }\r\n\r\n            return (\r\n              <g key={i} transform={`translate(${bin.x},${bin.y})`}>\r\n                <g>\r\n                <title>{`${mouseUp()}`}</title>\r\n                <path\r\n                  d={hexbin.hexagon()}\r\n                  fill={colorScale(colorAccessor(bin))}\r\n                  onClick={buttonClick}\r\n                />\r\n                </g>\r\n              </g>\r\n            );\r\n          })}\r\n        </g>\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n\r\nconst SearchGame = ({ data, setSelectedGames }) => {\r\n  const selectData = setSelectedGames;\r\n\r\n  const selectArray = [];\r\n  const teamArray = [];\r\n\r\n  for (let i = 0; i < selectData.length; i++) {\r\n    //それぞれを配列\r\n    selectArray[i] = selectData[i];\r\n  }\r\n  for (let i = 0; i < selectData.length; i++) {\r\n    teamArray[i] = selectArray[i].Team_H;\r\n  }\r\n\r\n  const listTeam = selectArray.map((team) => {\r\n    var paramsString = team.URL;\r\n    var searchParams = new URLSearchParams(paramsString);\r\n    var getVUrl = searchParams.getAll(\"https://www.youtube.com/watch?v\");\r\n    var urlString = \"https://www.youtube.com/embed/\";\r\n    //console.log(team);\r\n    var makeUrl = new URL(urlString + getVUrl);\r\n    return (\r\n        <nav className=\"columns\">\r\n          {/*\r\n          <div className=\"column\">        \r\n            <RadarChart \r\n              data={setSelectedGames}\r\n            />\r\n          </div>\r\n          */}\r\n          \r\n            <div className=\"column\">\r\n              <div className=\"level-item has-text-centered\" key={team}>\r\n                <div>\r\n                <p className=\"heading\">節数</p>\r\n                <p className=\"title\">\r\n                    <font size=\"5\">\r\n                      {team.Section}節&nbsp;\r\n                    </font>\r\n                  </p>\r\n                </div>\r\n                <div>\r\n                  <p className=\"heading\">Home</p>\r\n                  <p className=\"title\">\r\n                    <font size=\"5\">\r\n                      {team.Team_H}\r\n                    </font>\r\n                  </p>\r\n                </div>\r\n                <div>\r\n                  <p className=\"heading\">score</p>\r\n                  <p className=\"title\">\r\n                    <font color=\"red\" size=\"4\">\r\n                      &nbsp;{team.Goal_H} ー {team.Goal_A}&nbsp;\r\n                    </font>\r\n                  </p>\r\n                </div>\r\n                <div>\r\n                  <p className=\"heading\">Away</p>\r\n                  <p className=\"title\">\r\n                    <font size=\"5\">\r\n                      {team.Team_A}&nbsp;\r\n                    </font>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <p className=\"title\" align=\"center\">\r\n                  <font size=\"2\">\r\n                    再生回数：{team.View}回&nbsp;\r\n                    総ゴール数：{team.Goal}点<br></br>\r\n                    総シュート数：{team.Shoot}本&nbsp;\r\n                    総スプリント数：{team.Sprint}回<br></br>\r\n                    総走行距離：{Math.round(team.Mileage)}km\r\n                  </font>\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div className=\"column\">\r\n              <br></br>\r\n              <iframe\r\n                src={makeUrl}\r\n                frameborder=\"0\"\r\n                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                allowfullscreen\r\n              ></iframe>\r\n            </div>\r\n        </nav>          \r\n    );\r\n  });\r\n  return <div>{listTeam}</div>;\r\n};\r\n\r\n\r\n//平行座標のとこ\r\n\r\nconst ParallelCoordinates = ({\r\n  data,\r\n  variables,\r\n  margin,\r\n  contentWidth,\r\n  contentHeight,\r\n}) => {\r\n  const width = contentWidth + margin.left + margin.right;\r\n  const height = contentHeight + margin.top + margin.bottom;\r\n  const strokeColor = \"#888\";\r\n\r\n  const xScale = d3\r\n    .scaleLinear()\r\n    .domain([0, variables.length - 1])\r\n    .range([0, contentWidth]);\r\n  const yScales = variables.map(({ property }) => {\r\n    return d3\r\n      .scaleLinear()\r\n      .domain(d3.extent(data, (item) => item[property]))\r\n      .range([contentHeight, 0])\r\n      .nice();\r\n  });\r\n\r\n  return (\r\n    <svg viewBox={`0 0 ${width} ${height}`}>\r\n      <g transform={`translate(${margin.left},${margin.top})`}>\r\n        <g>\r\n          {data.map((item, i) => {\r\n            const line = d3\r\n              .line()\r\n              .x((_, i) => xScale(i))\r\n              .y(({ property }, i) => yScales[i](item[property]));\r\n            return (\r\n              <g key={i}>\r\n                <path\r\n                  d={line(variables)}\r\n                  stroke={item.Color}\r\n                  fill=\"none\"\r\n                />\r\n              </g>\r\n            );\r\n          })}\r\n        </g>\r\n        <g>\r\n          {variables.map(({ label, property }, i) => {\r\n            const yScale = yScales[i];\r\n            return (\r\n              <g key={i} transform={`translate(${xScale(i)},0)`}>\r\n                <line y1=\"0\" y2={contentHeight} stroke={strokeColor} />\r\n                <g>\r\n                  {yScale.ticks().filter((y) => Math.floor(y) === y).map((y, j) => {\r\n                    return (\r\n                      <g key={j} transform={`translate(0,${yScale(y)})`}>\r\n                        <line x1=\"-3\" x2=\"3\" stroke={strokeColor} />\r\n                        <text x=\"5\" fontSize=\"8\" dominantBaseline=\"central\">\r\n                          {y}\r\n                        </text>\r\n                      </g>\r\n                    );\r\n                  })}\r\n                </g>\r\n                <text\r\n                  y=\"-5\"\r\n                  fontSize=\"10\"\r\n                  fontWeight=\"bold\"\r\n                  textAnchor=\"middle\"\r\n                  dominantBaseline=\"text-after-edge\"\r\n                >\r\n                  {label}\r\n                </text>\r\n                <text\r\n                  y={contentHeight + 5}\r\n                  fontSize=\"10\"\r\n                  fontWeight=\"bold\"\r\n                  textAnchor=\"middle\"\r\n                  dominantBaseline=\"text-before-edge\"\r\n                >\r\n                  {label}\r\n                </text>\r\n              </g>\r\n            );\r\n          })}\r\n        </g>\r\n        <g transform={`translate(0,${contentHeight + 30})`}>\r\n          {data.map((item, i) => {\r\n            return (\r\n              <g\r\n                key={i}\r\n                transform={`translate(${i * 35},0)`}\r\n                style={{ cursor: \"pointer\" }}\r\n              >\r\n                <rect width=\"10\" height=\"10\" fill={item.Color} />\r\n                <text x=\"-10\" y=\"25\" fontSize=\"10\">\r\n                  {item.Team}\r\n                </text>\r\n              </g>\r\n            );\r\n          })}\r\n        </g>\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n\r\n//平行座標ここまで\r\n\r\n//レーダーチャートここから\r\nconst RadarChart = ({ data }) => {\r\n  const keys = [\"pointView\",\"pointGoal\",\"pointShoot\",\"pointSprint\",\"pointMileage\"];\r\n  const elements = [\"再生回数\",\"総ゴール数\",\"総シュート数\",\"総スプリント数\",\"総走行距離\"];\r\n  const margin = {\r\n    top: 30,\r\n    right: 30,\r\n    bottom: 150,\r\n    left: 50,\r\n  };\r\n  console.log(data);\r\n  const r = 50;\r\n  const scale = d3\r\n    .scaleLinear()\r\n    .domain([\r\n      0,\r\n      //d3.max(data[keys]),\r\n      //d3.max(keys,data,(key,item) => item(key)),\r\n      d3.max(keys, (key) => d3.max(data, (item) => item[key])),\r\n    ])\r\n    .range([0, r])\r\n    .nice();\r\n  const t0 = -Math.PI / 2;\r\n  const dt = (Math.PI * 2) / 5;//keys.length;\r\n  const color = d3.scaleOrdinal(d3.schemeCategory10);\r\n  const axisColor = \"#ccc\";\r\n  const path = (points) => {\r\n    const path = d3.path();\r\n    points.forEach(({ x, y }, j) => {\r\n      if (j === 0) {\r\n        path.moveTo(x, y);\r\n      } else {\r\n        path.lineTo(x, y);\r\n      }\r\n    });\r\n    path.closePath();\r\n    return path.toString();\r\n  };\r\n  return (\r\n    <svg\r\n      viewBox={`0 0 ${2 * r + margin.left + margin.right} ${\r\n        2 * r + margin.top + margin.bottom\r\n      }`}\r\n    >\r\n      <g transform={`translate(${r + margin.left},${r + margin.right})`}>\r\n        <g>\r\n          {keys.map((key, j) => {\r\n            return (\r\n              <g key={j}>\r\n                <line\r\n                  x1=\"0\"\r\n                  y1=\"0\"\r\n                  x2={r * Math.cos(t0 + dt * j)}\r\n                  y2={r * Math.sin(t0 + dt * j)}\r\n                  stroke={axisColor}\r\n                />\r\n                <text\r\n                  x={(r + 20) * Math.cos(t0 + dt * j)}\r\n                  y={(r + 20) * Math.sin(t0 + dt * j)}\r\n                  textAnchor=\"middle\"\r\n                  dominantBaseline=\"central\"\r\n                  fontSize=\"5\"\r\n                  fontWeight=\"bold\"\r\n                >\r\n                  {elements[j]}\r\n                </text>\r\n              </g>\r\n            );\r\n          })}\r\n        </g>\r\n        <g>\r\n          {scale.ticks(5).map((v, k) => {\r\n            const points = keys.map((_, j) => {\r\n              const d = scale(v);\r\n              const x = d * Math.cos(t0 + dt * j);\r\n              const y = d * Math.sin(t0 + dt * j);\r\n              return { x, y };\r\n            });\r\n            return (\r\n              //レーダーチャート内の点数についての部分\r\n              <g key={k}>\r\n                <path d={path(points)} fill=\"none\" stroke={axisColor} />\r\n                <text\r\n                  x=\"3\"\r\n                  y={-scale(v)}\r\n                  textAnchor=\"start\"\r\n                  dominantBaseline=\"central\"\r\n                  fontSize=\"5\"\r\n                >\r\n                  {v.toFixed(0)}\r\n                </text>\r\n              </g>\r\n            );\r\n          })}\r\n        </g>\r\n        <g>\r\n          {data.map((item, i) => {\r\n            const points = keys.map((key, j) => {\r\n              const d = scale(item[key]);\r\n              const x = d * Math.cos(t0 + dt * j);\r\n              const y = d * Math.sin(t0 + dt * j);\r\n              return { x, y };\r\n            });\r\n            return (\r\n              <g key={i}>\r\n                <path d={path(points)} fill=\"none\" stroke={color(i)} />\r\n              </g>\r\n            );\r\n          })}\r\n        </g>\r\n        \r\n        <g transform={`translate(${-r},${r + 50})`}>\r\n          {data.map((item, i) => {\r\n            //キャプション\r\n            return (\r\n              <g key={i} transform={`translate(0,${10*i})`}>\r\n                <rect x=\"-50\" y=\"-10\" width=\"7\" height=\"7\" fill={color(i)} />\r\n                <text\r\n                  textAnchor=\"start\"\r\n                  dominantBaseline=\"central\"\r\n                  x=\"-40\"\r\n                  y=\"-7\"\r\n                  fontSize=\"5\"\r\n                >\r\n                  {item[\"Team_H\"]}-{item[\"Team_A\"]}\r\n                </text>\r\n              </g>\r\n            );\r\n          })}\r\n        </g>\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n\r\n\r\nconst TotalPage = () => {\r\n  const [originalData, setGameData] = useState([]);\r\n  const [data2, setTeamData] = useState([]);\r\n  const [selectedGames, setSelectedGames] = useState([]);\r\n  const [selectedTeam, setSelectedTeam] = useState(\"\");\r\n  const [selectedAxis, setSelectedAxis] = useState(\"\");\r\n  const [selectedColor, setSelectedColor] = useState(\"View\");\r\n\r\n  const data = originalData.filter((item) => {\r\n    return (\r\n      item.Team_H === selectedTeam ||\r\n      item.Team_A === selectedTeam ||\r\n      selectedTeam === \"\"\r\n    );\r\n  });\r\n\r\n  //console.log(data2);​\r\n  const variables = [\r\n    { label: \"代表歴選手数\", property: \"National_Player\" },\r\n    { label: \"総年俸\", property: \"Salary\" },\r\n    { label: \"個人賞選手数\", property: \"Award\" },\r\n    { label: \"昨年度勝ち点\", property: \"Last_Year_Point\" }\r\n  ];\r\n\r\n  \r\n\r\n  function Arraycount(value) {\r\n    return value.Team;\r\n  }\r\n  var Team = [];\r\n  Team = data2.filter(Arraycount);\r\n\r\n  const teamOptions = Team.map((value) => {\r\n    return <option value={value.Team}>{value.Team}</option>;\r\n  });\r\n  teamOptions.unshift(<option value=\"\">全て</option>);\r\n\r\n  //軸のプルダウン\r\n\r\n  /*var Axis = [\"t-SNE\", \"PCA\"];\r\n  const axisOptions = Axis.map((value2) => {\r\n    return <option value={value2}>{value2}</option>;\r\n  });*/\r\n\r\n  //色のプルダウン\r\n\r\n  var Color = [\"View\", \"Mileage\", \"Sprint\", \"Shoot\", \"Goal\"];\r\n  const colorOptions = Color.map((value3) => {\r\n    return <option value={value3}>{value3}</option>;\r\n  });\r\n\r\n  const handleChangeTeam = (event) => {\r\n    setSelectedTeam(event.target.value);\r\n  };\r\n\r\n  const handlechangecolor = (event) => {\r\n    setSelectedColor(event.target.value);\r\n  };\r\n\r\n  /*const handleChangeAxis = (event) => {\r\n    setSelectedAxis(event.target.value);\r\n  };*/\r\n\r\n  useEffect(() => {\r\n    fetch(\"J_Data.json\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        data.game.forEach((item, i) => {\r\n          item.id = i;\r\n        });\r\n        setGameData(data.game.filter((item) => item.View >= 0));\r\n      });\r\n    fetch(\"J_Data.json\")\r\n      .then((response2) => response2.json())\r\n      .then((data) => {\r\n        data.team.forEach((item, i) => {\r\n          item.id = i;\r\n        });\r\n        setTeamData(data.team.filter((item) => item.Total >= 0));\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {/*見出し*/}\r\n      <section className=\"hero is-info\">\r\n        <div className=\"hero-body\">\r\n          <div className=\"container\">\r\n            <h1 className=\"title\">サッカー観戦のための試合特徴の多次元データ可視化</h1>\r\n            <h2 className=\"subtitle\">日本大学　尾上研究室</h2>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      <section className=\"section\">\r\n        <div className=\"columns\">\r\n          <div className=\"column\">\r\n            <div className = \"box\"　style={{ height: \"100%\" }}>\r\n              <b>\r\n                <font size=\"5\"><center>Webページの見方</center></font>\r\n              </b>\r\n              <p>\r\n                本ページは2019年明治安田生命J1リーグ全306試合のトラッキングデータを用いた可視化Webページである。\r\n                本ページは4つのブロックから構成されている。<br></br>\r\n                1.フィルターメニューと平行座標プロット・・・18チームの特徴を表示した平行座標プロットを活用し、Hexbinの表示するチームの選択、色付けに使用する要素の選択が可能。<br></br>\r\n                2.Hexbin・・・全306試合の試合分布。六角形をクリックをすることでHexbinの下に六角形に含まれる試合を表示する。<br></br>\r\n                3.レーダーチャート・・・選択された試合の特徴についてのレーダーチャートを表示する。<br></br>\r\n                4.試合一覧・・・選択された試合の詳細とYouTubeのハイライトを表示する。<br></br>\r\n              </p>\r\n            </div>  \r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"columns\">\r\n          <div className=\"column is-two-fifths\">\r\n            {/*プルダウンメニュー 画面3分の1*/}\r\n            <div className=\"box\" style={{ height: \"100%\" }}>\r\n              <b>\r\n                <font size=\"5\"><center>フィルターメニュー</center></font>\r\n              </b>\r\n              <div className=\"field\">\r\n                <label className=\"label\">チーム</label>\r\n                <div className=\"control\">\r\n                  <div className=\"select is-fullwidth\">\r\n                    <select onChange={handleChangeTeam}>{teamOptions}</select>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n           {/*<div className=\"field\">\r\n                <label className=\"label\">分析方法</label>\r\n                <div className=\"control\">\r\n                  <div className=\"select is-fullwidth\">\r\n                    <select onChange={handleChangeAxis}>{axisOptions}</select>\r\n                  </div>\r\n                </div>\r\n              </div>*/}\r\n\r\n              <div className=\"field\">\r\n                <label className=\"label\">色付け</label>\r\n                <div className=\"control\">\r\n                  <div className=\"select is-fullwidth\">\r\n                    <select onChange={handlechangecolor}>{colorOptions}</select>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n \r\n              <ParallelCoordinates\r\n                data={data2}\r\n                variables={variables}\r\n                margin={{\r\n                top: 40,\r\n                left: 40,\r\n                bottom: 60,\r\n                right: 40,\r\n                }}\r\n                contentWidth={600}\r\n                contentHeight={400}\r\n              />\r\n              \r\n            </div>\r\n            {/**/}\r\n          </div>\r\n\r\n          <div className=\"column\">\r\n            <div className=\"box\" style={{ height: \"100%\" }}>\r\n              <div className=\"field\">\r\n                <b>\r\n                  <font size=\"5\"><center>Hexbin</center></font>\r\n                </b>\r\n              </div>\r\n            \r\n            <HexbinPlot\r\n              data={data}\r\n              setSelectedGames={setSelectedGames}\r\n              axis={selectedAxis}\r\n              setSelectedColor={selectedColor}\r\n            />\r\n            </div>\r\n            \r\n            \r\n          </div>\r\n        </div>\r\n        {/*此処までで上側(検索とhexbin)*/}\r\n        <div className=\"columns\">\r\n          <div className=\"column is-two-fifths\">\r\n            <div className=\"box\" style={{ height: \"100%\" }}>\r\n              <b>\r\n                <font size=\"5\"><center>選択領域内の試合のレーダーチャート</center></font>\r\n              </b>\r\n              <RadarChart \r\n                data={selectedGames}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"column\">\r\n            <div className=\"box\" style={{ height: \"100%\" }}>\r\n              <b>\r\n                <font size=\"5\"><center>選択領域内の試合一覧</center></font>\r\n              </b>\r\n              <SearchGame \r\n                data={data} \r\n                setSelectedGames={selectedGames}\r\n              />\r\n            </div>\r\n          </div>\r\n          \r\n            \r\n        </div>\r\n      </section>\r\n      {/*検索から表示までを1つのsection*/}\r\n\r\n      <footer className=\"footer\">\r\n        <div className=\"content has-text-centered\">\r\n          <p>&copy; 2020 Manaya Sakamoto, Tsubasa Deguchi</p>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\nrender(<TotalPage />, document.querySelector(\"#content\"));"],"sourceRoot":""}